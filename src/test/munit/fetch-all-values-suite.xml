<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="fetch-all-values-suite.xml" />
	<munit:test name="router-main-fetch-all-test" doc:id="52146ad8-24a5-426a-8efb-303e166d2913" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock fetch-all-values-flow" doc:id="e9720b0f-7f93-49a8-b617-34752702ed42" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a625a86d-82f3-43c1-88e2-98ce393a61e8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://routermainfetchalltest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1d2e6b4f-959d-4bce-a86d-93935976a716" >
				<munit:payload value="#[readUrl('classpath://routermainfetchalltest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://routermainfetchalltest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to router-main" doc:id="0a3151a4-b2c7-4d2d-bb2a-fabc6fafe127" name="router-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="00537fc7-1b4b-4176-8652-491e62c77d38" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import routermainfetchalltest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="fetch-all-values-flow-test" doc:id="7523e968-faca-4ad1-aa78-7a875811fdb3" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select All From Flights" doc:id="fcc081bc-f63e-40d1-aee5-3f52c5b6f091" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="736f85ff-d152-45b0-bce7-413bac190511" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://fetchallvaluesflowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="42cfef09-e436-4714-bd53-d13a9f036159" >
				<munit:payload value="#[readUrl('classpath://fetchallvaluesflowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://fetchallvaluesflowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to fetch-all-values-flow" doc:id="86ebe1a2-2a96-4c82-996e-ac80a4e1bb88" name="fetch-all-values-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="307c41ca-acd4-419a-8cc7-bde8812a5f64" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import fetchallvaluesflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
